{"version":3,"sources":["Components/InputComponent.jsx","Components/Item.jsx","Components/ItemsList.jsx","store.js","App.js","index.js"],"names":["InputComponent","props","React","useState","value","setValue","isValidateError","SetIsValidateError","helperText","SetErrorHelperText","Grid","item","xs","TextField","onChange","e","target","id","label","placeholder","fullWidth","margin","autoFocus","onKeyPress","event","key","dispatch","type","title","Math","floor","Date","now","error","InputLabelProps","shrink","variant","useStyles","makeStyles","root","width","buttonPadding","padding","Item","isCompleted","description","classes","className","Accordion","AccordionSummary","aria-label","aria-controls","expandIcon","container","justify","FormControlLabel","onClick","stopPropagation","onFocus","control","Checkbox","checked","IconButton","fontSize","AccordionDetails","multiline","rows","defaultValue","ItemsList","console","log","state","map","el","initialState","reducer","action","filter","App","useReducer","AppBar","position","Toolbar","Typography","Container","fixed","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d620cfc.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { Grid, TextField } from '@material-ui/core/';\r\n\r\n\r\nexport const InputComponent = (props) => {\r\n    const [value, setValue] = React.useState('')\r\n    const [isValidateError, SetIsValidateError] = React.useState(false)\r\n    const [helperText, SetErrorHelperText] = React.useState(null)\r\n\r\n    const submitTask = () => {\r\n        if (value === ''){\r\n            SetIsValidateError(true)\r\n            SetErrorHelperText('Поле не может быть пустым')\r\n        } else {\r\n            SetIsValidateError(false)\r\n            SetErrorHelperText(null)\r\n            props.dispatch({ type: 'ADD_TASK', \r\n                             title: value,\r\n                             id: Math.floor(Date.now() / 1000) })\r\n            setValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12}>\r\n                <TextField onChange={(e)=>{setValue(e.target.value)}}\r\n                    id=\"outlined-full-width\"\r\n                    value={value}\r\n                    label=\"Введите новую задачу и нажмите Enter\"\r\n                    placeholder=\"Название задачи\"\r\n                    helperText={helperText}\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    autoFocus\r\n                    onKeyPress={(event)=>{\r\n                        if(event.key === 'Enter'){\r\n                            submitTask()\r\n                        }\r\n                    }}\r\n                    error={isValidateError}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    variant=\"outlined\"\r\n                />\r\n            </Grid>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport {\r\n  Grid, TextField, Accordion, AccordionSummary, AccordionDetails,\r\n  Checkbox, FormControlLabel, IconButton } from '@material-ui/core/';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  }, \r\n  buttonPadding: {\r\n    padding: '0px'\r\n  }\r\n});\r\n\r\nexport const Item = ({ id, isCompleted, title, description, dispatch }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={12}>\r\n      <div className={classes.root}>\r\n        <Accordion>\r\n          <AccordionSummary aria-label=\"Expand\" aria-controls=\"additional-actions1-content\"\r\n            id=\"additional-actions1-header\" expandIcon={<ExpandMoreIcon />}>\r\n            <Grid container justify=\"space-between\">\r\n              <Grid item xs={11}>\r\n                <FormControlLabel label={title} aria-label=\"Acknowledge\"\r\n                  onClick={(event) => event.stopPropagation()}\r\n                  onFocus={(event) => event.stopPropagation()}\r\n                  control={<Checkbox checked={isCompleted}\r\n                    onChange={() => dispatch({ type: 'SET_IS_COMPLETED', id: id })} />}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n                  <IconButton className={classes.buttonPadding} onClick={() => dispatch({ type: 'DELETE_TASK', id: id })}\r\n                    aria-label=\"delete\">\r\n                    <DeleteIcon fontSize=\"large\" />\r\n                  </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </AccordionSummary>\r\n          <AccordionDetails>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Подробное описание\"\r\n              multiline\r\n              rows={4}\r\n              defaultValue={description}\r\n              fullWidth\r\n              variant=\"outlined\"\r\n              onChange={(e) => { dispatch({ type: 'SET_DESCRIPTION', id: id, description: e.target.value }) }}\r\n            />\r\n          </AccordionDetails>\r\n        </Accordion>\r\n\r\n      </div>\r\n    </Grid>\r\n  );\r\n}","import React from 'react';\r\nimport { Item } from './Item'\r\n\r\nimport { Grid } from '@material-ui/core/';\r\n\r\n\r\n\r\nexport const ItemsList = (props) => {\r\n  console.log(props.state)\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        {props.state.map(el => <Item key={el.id}\r\n          id={el.id}\r\n          isCompleted={el.isCompleted}\r\n          title={el.title}\r\n          description={el.description}\r\n          dispatch={props.dispatch} />\r\n        )}\r\n      </Grid>\r\n    </>\r\n  );\r\n}","export const initialState = [\r\n  { id: 1609409078, isCompleted: false, title: 'Купить еды', description: 'Много еды' },\r\n  { id: 1609409079, isCompleted: false, title: 'Позвонить', description: 'Всем позвонить, срочно!!!' },\r\n  { id: 1609409080, isCompleted: true, title: 'Сделать что-то полезное', description: null },\r\n  { id: 1609409081, isCompleted: false, title: 'Спасти Мир', description: null },\r\n  { id: 1609409082, isCompleted: false, title: 'Надеть шапку', description: null },\r\n];\r\n\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'SET_IS_COMPLETED': {\r\n      return [...state].map(el => el.id !== action.id ? el : { ...el, isCompleted: !el.isCompleted });\r\n    }\r\n    case 'DELETE_TASK': {\r\n      return state.filter(el => el.id !== action.id);\r\n    }\r\n    case 'ADD_TASK': {\r\n      return [\r\n        ...state, { id: action.id, isCompleted: false, title: action.title, description: null }\r\n      ];\r\n    }\r\n    case 'SET_DESCRIPTION': {\r\n      return [...state].map(el => el.id !== action.id ? el : { ...el, description: action.description });\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from 'react';\nimport { InputComponent } from './Components/InputComponent'\nimport { ItemsList } from './Components/ItemsList'\n\nimport { Container } from '@material-ui/core'\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { reducer, initialState } from './store';\n\n\nconst App = () => {\n\n  const [state, dispatch] = React.useReducer(reducer, initialState);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h5\">\n            React Todo App\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <Container fixed >\n        <InputComponent dispatch={dispatch} />\n        <ItemsList state={state} dispatch={dispatch} />\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}